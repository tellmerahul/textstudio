const a0_0x6cbe4f = a0_0x4a3e;
(function(_0xc195ef, _0x3407b4) {
    const _0x2d2532 = a0_0x4a3e
      , _0x545e41 = _0xc195ef();
    while (!![]) {
        try {
            const _0x34beb6 = parseInt(_0x2d2532(0x1a6)) / 0x1 * (parseInt(_0x2d2532(0x187)) / 0x2) + -parseInt(_0x2d2532(0xc2)) / 0x3 * (parseInt(_0x2d2532(0x207)) / 0x4) + -parseInt(_0x2d2532(0x1cd)) / 0x5 + parseInt(_0x2d2532(0x1d7)) / 0x6 + -parseInt(_0x2d2532(0x1e6)) / 0x7 + parseInt(_0x2d2532(0x121)) / 0x8 + parseInt(_0x2d2532(0xbc)) / 0x9 * (parseInt(_0x2d2532(0x1b4)) / 0xa);
            if (_0x34beb6 === _0x3407b4)
                break;
            else
                _0x545e41['push'](_0x545e41['shift']());
        } catch (_0x1795ac) {
            _0x545e41['push'](_0x545e41['shift']());
        }
    }
}(a0_0x46c8, 0xcf62a));
function a0_0x4a3e(_0x1871d9, _0x4b0b38) {
    const _0x46c87a = a0_0x46c8();
    return a0_0x4a3e = function(_0x4a3e93, _0x2013f5) {
        _0x4a3e93 = _0x4a3e93 - 0x97;
        let _0x23e116 = _0x46c87a[_0x4a3e93];
        return _0x23e116;
    }
    ,
    a0_0x4a3e(_0x1871d9, _0x4b0b38);
}
var TextEditorUtil = {
    'hexToRgb': function(_0x168e9e) {
        const _0x40d6bc = a0_0x4a3e
          , _0x1cfbb8 = _0x168e9e[_0x40d6bc(0x19a)](0x1)[_0x40d6bc(0x188)](/.{1,2}/g)
          , _0x5e0897 = {
            'r': parseInt(_0x1cfbb8[0x0], 0x10),
            'g': parseInt(_0x1cfbb8[0x1], 0x10),
            'b': parseInt(_0x1cfbb8[0x2], 0x10)
        };
        return 0x4 === _0x1cfbb8[_0x40d6bc(0x126)] && (_0x5e0897['a'] = parseInt(_0x1cfbb8[0x3], 0x10) / 0xff),
        Object[_0x40d6bc(0xf4)](_0x5e0897)[_0x40d6bc(0x14c)](function(_0x479d8c, _0x35f8ee) {
            isNaN(_0x5e0897[_0x479d8c]) && (_0x5e0897[_0x479d8c] = 0x0);
        }),
        _0x5e0897;
    },
    'removeAllHexOpaqueAlpha': function(_0x15d074) {
        const _0x47ab4e = a0_0x4a3e;
        return _0x15d074[_0x47ab4e(0x194)](/(#\w{6})ff/gi, '$1');
    },
    'isIOS': function() {
        const _0x41b87e = a0_0x4a3e;
        return /iPad|iPhone|iPod/['test'](navigator[_0x41b87e(0x118)]);
    },
    'isHexColor': function(_0x5abe10) {
        const _0x384377 = a0_0x4a3e;
        return new RegExp(_0x384377(0xc0),'i')[_0x384377(0x152)](_0x5abe10);
    },
    'rgbToHex': function(_0x45f7ab) {
        const _0x2393e8 = a0_0x4a3e;
        let _0x5acdd1 = '#' + (0x1000000 + (_0x45f7ab['r'] << 0x10 | _0x45f7ab['g'] << 0x8 | _0x45f7ab['b'] << 0x0))[_0x2393e8(0x1ed)](0x10)[_0x2393e8(0xa7)](0x1);
        if (void 0x0 !== _0x45f7ab['a']) {
            const _0x1e7500 = Math['floor'](0xff * _0x45f7ab['a']);
            _0x5acdd1 += (_0x1e7500 < 0x10 ? '0' : '') + _0x1e7500['toString'](0x10);
        }
        return _0x5acdd1;
    },
    'degrad': function(_0x4f0538) {
        return _0x4f0538 * Math['PI'] / 0xb4;
    },
    'exponentialCurve': function(_0x47df09, _0x4f186b=0x64, _0x387ccd=0x4) {
        const _0x4d8b96 = a0_0x4a3e
          , _0x3568e4 = Math[_0x4d8b96(0x1f9)](_0x47df09) / Math['log'](_0x387ccd);
        return Array(_0x47df09)[_0x4d8b96(0x1bd)](_0x4f186b)[_0x4d8b96(0x14c)]( (_0x224aff, _0x40cdd7) => _0x224aff / Math[_0x4d8b96(0x172)](_0x3568e4, _0x40cdd7));
    },
    'generateUUID': function() {
        const _0xb564c8 = a0_0x4a3e;
        return _0xb564c8(0x16d)[_0xb564c8(0x194)](/[xy]/g, function(_0x32e582) {
            const _0x2a3af2 = _0xb564c8;
            var _0x5397a5 = 0x10 * Math[_0x2a3af2(0x1f6)]() | 0x0;
            return ('x' == _0x32e582 ? _0x5397a5 : 0x3 & _0x5397a5 | 0x8)['toString'](0x10);
        });
    },
    'mergeDeep': function(_0x147edd, _0x7f0820) {
        const _0x1d80f2 = a0_0x4a3e
          , _0x381257 = function(_0x2266bc) {
            const _0x20fbe1 = a0_0x4a3e;
            return _0x2266bc && _0x20fbe1(0xc1) == typeof _0x2266bc && !Array[_0x20fbe1(0x184)](_0x2266bc);
        };
        if (_0x381257(_0x147edd) && _0x381257(_0x7f0820)) {
            for (const _0x4b1261 in _0x7f0820)
                _0x381257(_0x7f0820[_0x4b1261]) ? (_0x147edd[_0x4b1261] || Object[_0x1d80f2(0x1fb)](_0x147edd, {
                    [_0x4b1261]: {}
                }),
                this['mergeDeep'](_0x147edd[_0x4b1261], _0x7f0820[_0x4b1261])) : Object['assign'](_0x147edd, {
                    [_0x4b1261]: _0x7f0820[_0x4b1261]
                });
        }
        return _0x147edd;
    },
    'getBoundingSize': function(_0x4179f5, _0x2cb758) {
        const _0x28768f = a0_0x4a3e;
        if ((_0x2cb758 %= 0xb4) < 0x0 && (_0x2cb758 = 0xb4 + _0x2cb758),
        _0x2cb758 >= 0x5a && (_0x4179f5 = [_0x4179f5[0x1], _0x4179f5[0x0]],
        _0x2cb758 -= 0x5a),
        0x0 === _0x2cb758)
            return {
                'width': _0x4179f5[0x0],
                'height': _0x4179f5[0x1]
            };
        const _0x49b190 = _0x2cb758 * Math['PI'] / 0xb4;
        return {
            'width': _0x4179f5[0x0] * Math[_0x28768f(0x1c8)](Math[_0x28768f(0x1d9)](_0x49b190)) + _0x4179f5[0x1] * Math[_0x28768f(0x1c8)](Math[_0x28768f(0xd0)](_0x49b190)),
            'height': _0x4179f5[0x0] * Math['abs'](Math[_0x28768f(0xd0)](_0x49b190)) + _0x4179f5[0x1] * Math['abs'](Math[_0x28768f(0x1d9)](_0x49b190))
        };
    },
    'cloneCanvas': function(_0x2c5b60) {
        const _0xfd1c70 = a0_0x4a3e
          , _0x3fb3a6 = document[_0xfd1c70(0x135)](_0xfd1c70(0xf7))
          , _0x102660 = _0x3fb3a6['getContext']('2d');
        return _0x3fb3a6[_0xfd1c70(0x1f3)] = _0x2c5b60[_0xfd1c70(0x1f3)],
        _0x3fb3a6[_0xfd1c70(0xd9)] = _0x2c5b60[_0xfd1c70(0xd9)],
        _0x102660[_0xfd1c70(0xfb)](_0x2c5b60, 0x0, 0x0),
        _0x3fb3a6;
    },
    'opencvToCanvas': function(_0xf61091) {
        const _0xaf341a = a0_0x4a3e
          , _0x28a3fd = new ImageData(new Uint8ClampedArray(_0xf61091[_0xaf341a(0x1f8)]),_0xf61091[_0xaf341a(0x1eb)],_0xf61091[_0xaf341a(0x11a)])
          , _0x459528 = document['createElement'](_0xaf341a(0xf7))
          , _0x37dff7 = _0x459528['getContext']('2d', {
            'willReadFrequently': !0x0
        });
        return _0x459528[_0xaf341a(0x1f3)] = _0x28a3fd['width'],
        _0x459528[_0xaf341a(0xd9)] = _0x28a3fd[_0xaf341a(0xd9)],
        _0x37dff7['putImageData'](_0x28a3fd, 0x0, 0x0),
        _0x459528;
    },
    'bestResize': async function(_0xa724c6, _0x56036f) {
        const _0x21bd1a = a0_0x4a3e;
        window[_0x21bd1a(0x168)] || (window[_0x21bd1a(0x168)] = window['pica']());
        try {
            await window[_0x21bd1a(0x168)][_0x21bd1a(0x17c)](_0xa724c6, _0x56036f);
        } catch (_0x1b0324) {
            console[_0x21bd1a(0x1f5)](_0x1b0324);
            const _0x268019 = _0x56036f[_0x21bd1a(0x153)]('2d');
            _0x268019 && _0x268019[_0x21bd1a(0xfb)](_0xa724c6, 0x0, 0x0, _0xa724c6[_0x21bd1a(0x1f3)], _0xa724c6['height'], 0x0, 0x0, _0x56036f[_0x21bd1a(0x1f3)], _0x56036f['height']);
        }
    },
    'getScaleDownSize': function(_0x4624f8, _0xc3b11, _0x46116b, _0x46a19e) {
        const _0x1d35bf = a0_0x4a3e;
        let _0x4f3bdb = {
            'width': _0x4624f8,
            'height': _0xc3b11
        };
        if (_0x4624f8 > _0x46116b || _0xc3b11 > _0x46a19e) {
            const _0x337b1b = Math['min'](_0x46116b / _0x4624f8, _0x46a19e / _0xc3b11);
            _0x4f3bdb[_0x1d35bf(0x1f3)] = _0x337b1b * _0x4624f8,
            _0x4f3bdb[_0x1d35bf(0xd9)] = _0x337b1b * _0xc3b11;
        }
        return _0x4f3bdb;
    },
    'thumbnailImageCanvas': function(_0x5e600e, _0x4d9182, _0x20faa1) {
        const _0x1b9066 = a0_0x4a3e
          , _0x28abf4 = _0x5e600e[_0x1b9066(0x115)] || _0x5e600e[_0x1b9066(0x1f3)]
          , _0x12c755 = _0x5e600e[_0x1b9066(0x17d)] || _0x5e600e[_0x1b9066(0xd9)]
          , _0x1b7da9 = this[_0x1b9066(0x11e)](_0x28abf4, _0x12c755, _0x4d9182, _0x20faa1)
          , _0x4e3df2 = document[_0x1b9066(0x135)](_0x1b9066(0xf7))
          , _0x332125 = _0x4e3df2[_0x1b9066(0x153)]('2d');
        return _0x4e3df2[_0x1b9066(0x1f3)] = _0x1b7da9[_0x1b9066(0x1f3)],
        _0x4e3df2['height'] = _0x1b7da9[_0x1b9066(0xd9)],
        _0x332125[_0x1b9066(0xfb)](_0x5e600e, 0x0, 0x0, _0x28abf4, _0x12c755, 0x0, 0x0, _0x1b7da9[_0x1b9066(0x1f3)], _0x1b7da9[_0x1b9066(0xd9)]),
        _0x4e3df2;
    },
    'download': function(_0x16c85c, _0x4ca4d7, _0xe161a5) {
        const _0xd5d960 = a0_0x4a3e
          , _0x50f519 = document['createElement']('a')
          , _0xf243b6 = new Blob([_0x16c85c],{
            'type': _0xe161a5
        });
        _0x50f519[_0xd5d960(0x1c6)] = URL['createObjectURL'](_0xf243b6),
        _0x50f519[_0xd5d960(0x19b)] = _0x4ca4d7,
        _0x50f519[_0xd5d960(0x1f4)]();
    },
    'showCanvas': function(_0x340046) {
        const _0x5dd792 = a0_0x4a3e
          , _0x3633cf = this[_0x5dd792(0xca)](_0x340046);
        _0x3633cf['style'][_0x5dd792(0x136)] = _0x5dd792(0x182),
        document[_0x5dd792(0xe2)]['append'](_0x3633cf);
    },
    'cyrb53': function(_0x17437e, _0x4f6a3e=0x0) {
        const _0xe06ce7 = a0_0x4a3e;
        let _0xa1fab8 = 0xdeadbeef ^ _0x4f6a3e
          , _0xab3b10 = 0x41c6ce57 ^ _0x4f6a3e;
        for (let _0xa5499b, _0x54b2e5 = 0x0; _0x54b2e5 < _0x17437e[_0xe06ce7(0x126)]; _0x54b2e5++)
            _0xa5499b = _0x17437e[_0xe06ce7(0x109)](_0x54b2e5),
            _0xa1fab8 = Math['imul'](_0xa1fab8 ^ _0xa5499b, 0x9e3779b1),
            _0xab3b10 = Math['imul'](_0xab3b10 ^ _0xa5499b, 0x5f356495);
        return _0xa1fab8 = Math[_0xe06ce7(0x17f)](_0xa1fab8 ^ _0xa1fab8 >>> 0x10, 0x85ebca6b) ^ Math[_0xe06ce7(0x17f)](_0xab3b10 ^ _0xab3b10 >>> 0xd, 0xc2b2ae35),
        _0xab3b10 = Math[_0xe06ce7(0x17f)](_0xab3b10 ^ _0xab3b10 >>> 0x10, 0x85ebca6b) ^ Math['imul'](_0xa1fab8 ^ _0xa1fab8 >>> 0xd, 0xc2b2ae35),
        0x100000000 * (0x1fffff & _0xab3b10) + (_0xa1fab8 >>> 0x0);
    },
    'arrayBufferToBase64': function(_0x2e4148) {
        const _0xbde77 = a0_0x4a3e;
        let _0x2edf3c = ''
          , _0x3052d9 = new Uint8Array(_0x2e4148)
          , _0x50cf37 = _0x3052d9[_0xbde77(0xb8)];
        for (let _0xd667f7 = 0x0; _0xd667f7 < _0x50cf37; _0xd667f7++)
            _0x2edf3c += String['fromCharCode'](_0x3052d9[_0xd667f7]);
        return window[_0xbde77(0x196)](_0x2edf3c);
    },
    'getCompositeOperations': function() {
        const _0x112846 = a0_0x4a3e;
        return [_0x112846(0x204), 'source-in', _0x112846(0x125), _0x112846(0x1d1), _0x112846(0x1fc), _0x112846(0xe0), 'destination-out', _0x112846(0xed), _0x112846(0x145), _0x112846(0x124)];
    },
    'parseRgbString': function(_0x2095df) {
        const _0x1ee35e = a0_0x4a3e;
        if (/rgb/[_0x1ee35e(0x152)](_0x2095df)) {
            let _0x5fa647 = _0x2095df[_0x1ee35e(0x188)](/\((\d{1,3}),\s*(\d{1,3}),\s*(\d{1,3})\)/);
            if (_0x5fa647)
                return {
                    'r': _0x5fa647[0x1],
                    'g': _0x5fa647[0x2],
                    'b': _0x5fa647[0x3]
                };
        }
        return !0x1;
    },
    'rgbStringToHex': function(_0x45027c) {
        const _0x42de86 = a0_0x4a3e;
        let _0x206843 = this['parseRgbString'](_0x45027c);
        return !!_0x206843 && TextEditorUtil[_0x42de86(0xc5)](_0x206843);
    },
    'parseCssGradient': function(_0x2ea760) {
        const _0x5c33ca = a0_0x4a3e;
        return (_0x2ea760 = _0x2ea760['split']('%'))['map'](function(_0x35751b) {
            const _0x4d36c3 = a0_0x4a3e;
            if ('' !== (_0x35751b = _0x35751b[_0x4d36c3(0x1a1)]())) {
                if (/rgba/[_0x4d36c3(0x152)](_0x35751b)) {
                    if (_0x35751b = _0x35751b[_0x4d36c3(0x188)](/\((\d+),\s*(\d+),\s*(\d+),\s*([\.\d]+)\)\s*([\.\d]+)/)) {
                        const _0x914cab = {
                            'r': parseInt(_0x35751b[0x1]),
                            'g': parseInt(_0x35751b[0x2]),
                            'b': parseInt(_0x35751b[0x3]),
                            'a': parseFloat(_0x35751b[0x4])
                        };
                        return {
                            'color': TextEditorUtil[_0x4d36c3(0xc5)](_0x914cab),
                            'pos': parseFloat(_0x35751b[0x5])
                        };
                    }
                } else {
                    if (/rgb/[_0x4d36c3(0x152)](_0x35751b)) {
                        if (_0x35751b = _0x35751b[_0x4d36c3(0x188)](/\((\d+),\s*(\d+),\s*(\d+)\)\s*([\.\d]+)/)) {
                            const _0x227bc0 = {
                                'r': parseInt(_0x35751b[0x1]),
                                'g': parseInt(_0x35751b[0x2]),
                                'b': parseInt(_0x35751b[0x3])
                            };
                            return {
                                'color': TextEditorUtil[_0x4d36c3(0xc5)](_0x227bc0),
                                'pos': parseFloat(_0x35751b[0x4])
                            };
                        }
                    } else {
                        if (/(#\w{8})\s+([\.\d]+)/['test'](_0x35751b)) {
                            if (_0x35751b = _0x35751b[_0x4d36c3(0x188)](/(#\w{8})\s+([\.\d]+)/))
                                return {
                                    'color': _0x35751b[0x1],
                                    'pos': parseFloat(_0x35751b[0x2])
                                };
                        } else {
                            if (_0x35751b = _0x35751b[_0x4d36c3(0x188)](/(#\w{3,6})\s+([\.\d]+)/))
                                return {
                                    'color': _0x35751b[0x1],
                                    'pos': parseFloat(_0x35751b[0x2])
                                };
                        }
                    }
                }
            }
        })[_0x5c33ca(0xcf)](_0x14e928 => _0x14e928 && void 0x0 !== _0x14e928);
    },
    'pathResolve': function(_0x4aae70, _0x29eb4b) {
        const _0x477360 = a0_0x4a3e;
        return _0x4aae70['split']('.')[_0x477360(0x13a)](function(_0x5082ce, _0x57082f) {
            return _0x5082ce ? _0x5082ce[_0x57082f] : null;
        }, _0x29eb4b);
    },
    'trimCanvas': (function() {
        function _0x17af77(_0x34f347, _0x3e1a2e, _0x3f7531, _0x4a6bab) {
            const _0x39c428 = a0_0x4a3e;
            for (let _0x46ade6 = 0x0; _0x46ade6 < _0x3e1a2e; ++_0x46ade6)
                if (_0x34f347[_0x39c428(0x1f8)][_0x3f7531 * _0x3e1a2e * 0x4 + 0x4 * _0x46ade6 + 0x3] > _0x4a6bab)
                    return !0x1;
            return !0x0;
        }
        function _0x4a7b5b(_0x1bfaf6, _0xb080b9, _0x2abbb9, _0xcf6547, _0x23e8c0, _0x1db5f4) {
            for (let _0x142283 = _0xcf6547; _0x142283 < _0x23e8c0; ++_0x142283)
                if (_0x1bfaf6['data'][_0x142283 * _0xb080b9 * 0x4 + 0x4 * _0x2abbb9 + 0x3] > _0x1db5f4)
                    return !0x1;
            return !0x0;
        }
        return function(_0x50072f, _0x5ba252, _0x3f4282) {
            const _0x459e3b = a0_0x4a3e;
            _0x3f4282 || (_0x3f4282 = 0x0);
            const _0x30de22 = _0x50072f[_0x459e3b(0x153)]('2d', {
                'willReadFrequently': !0x0
            })
              , _0xa89e06 = _0x50072f[_0x459e3b(0x1f3)]
              , _0x5775e6 = _0x30de22[_0x459e3b(0x123)](0x0, 0x0, _0x50072f[_0x459e3b(0x1f3)], _0x50072f[_0x459e3b(0xd9)]);
            let _0x19727b = 0x0
              , _0x17284c = _0x5775e6['height']
              , _0x17c67c = 0x0
              , _0x33eced = _0x5775e6[_0x459e3b(0x1f3)];
            for (; _0x19727b < _0x17284c && _0x17af77(_0x5775e6, _0xa89e06, _0x19727b, _0x3f4282); )
                ++_0x19727b;
            for (; _0x17284c - 0x1 > _0x19727b && _0x17af77(_0x5775e6, _0xa89e06, _0x17284c - 0x1, _0x3f4282); )
                --_0x17284c;
            for (; _0x17c67c < _0x33eced && _0x4a7b5b(_0x5775e6, _0xa89e06, _0x17c67c, _0x19727b, _0x17284c, _0x3f4282); )
                ++_0x17c67c;
            for (; _0x33eced - 0x1 > _0x17c67c && _0x4a7b5b(_0x5775e6, _0xa89e06, _0x33eced - 0x1, _0x19727b, _0x17284c, _0x3f4282); )
                --_0x33eced;
            const _0x3e913e = _0x33eced - _0x17c67c
              , _0xab166c = _0x17284c - _0x19727b;
            if (0x0 === _0x3e913e || 0x0 === _0xab166c)
                return !0x1;
            const _0x463607 = {
                'x': _0x17c67c,
                'y': _0x19727b,
                'width': _0x3e913e,
                'height': _0xab166c
            };
            if (!_0x5ba252) {
                const _0x151649 = document[_0x459e3b(0x135)](_0x459e3b(0xf7))
                  , _0x13284b = _0x151649[_0x459e3b(0x153)]('2d');
                _0x151649[_0x459e3b(0x1f3)] = _0x3e913e,
                _0x151649[_0x459e3b(0xd9)] = _0xab166c,
                _0x13284b['drawImage'](_0x50072f, _0x17c67c, _0x19727b, _0x3e913e, _0xab166c, 0x0, 0x0, _0x3e913e, _0xab166c),
                _0x463607[_0x459e3b(0xf7)] = _0x151649;
            }
            return _0x463607;
        }
        ;
    }()),
    'countOccurrences'(_0x1b2065, _0x556fa6, _0x29b292='left') {
        const _0x46d638 = a0_0x4a3e;
        if (0x0 === _0x1b2065[_0x46d638(0x126)])
            return 0x0;
        let _0x4374d8 = 0x0
          , _0x23e99a = 0x0
          , _0x24eb3b = _0x556fa6['length'];
        'right' === _0x29b292 && (_0x1b2065 = _0x1b2065[_0x46d638(0x1fd)]('')[_0x46d638(0x11c)]()[_0x46d638(0xf8)](''));
        let _0x1498a1 = _0x1b2065;
        for (; 'left' !== _0x29b292 && _0x46d638(0x1e1) !== _0x29b292 || (_0x1498a1 = _0x1b2065[_0x46d638(0x19a)](0x0, _0x23e99a + _0x556fa6[_0x46d638(0x126)])),
        _0x23e99a = _0x1498a1[_0x46d638(0x12b)](_0x556fa6, _0x23e99a),
        -0x1 !== _0x23e99a; )
            _0x23e99a += _0x24eb3b,
            _0x4374d8++;
        return _0x4374d8;
    },
    'cloneObject': _0x36e26c => JSON[a0_0x6cbe4f(0x1ad)](JSON[a0_0x6cbe4f(0x120)](_0x36e26c)),
    'supportsWoff2'() {
        const _0xf7e2c8 = a0_0x6cbe4f;
        if (!(_0xf7e2c8(0x1ab)in window))
            return !0x1;
        const _0x169584 = new FontFace('t',_0xf7e2c8(0x1f1),{});
        return _0x169584[_0xf7e2c8(0x127)]()[_0xf7e2c8(0x195)](function() {}),
        _0xf7e2c8(0x14f) == _0x169584[_0xf7e2c8(0xf5)] || 'loaded' == _0x169584['status'];
    },
    'getImg': async _0x2a9776 => new Promise(async (_0x550a78, _0x112f27) => {
        const _0x9d19de = a0_0x6cbe4f
          , _0x136c9b = new Image();
        _0x136c9b['crossOrigin'] = _0x9d19de(0xa4),
        _0x136c9b['addEventListener']('load', function _0x103e4c() {
            const _0x2f40da = _0x9d19de;
            _0x136c9b['removeEventListener'](_0x2f40da(0x127), _0x103e4c),
            _0x550a78(this);
        }),
        _0x136c9b[_0x9d19de(0x1dc)](_0x9d19de(0x1f5), function _0x5847ef(_0x5da3b7) {
            const _0x347632 = _0x9d19de;
            console['log'](_0x5da3b7),
            _0x136c9b[_0x347632(0xd3)](_0x347632(0x1f5), _0x5847ef),
            _0x550a78(!0x1);
        }),
        _0x136c9b[_0x9d19de(0xab)] = _0x2a9776;
    }
    ),
    'progressiveResize'(_0x5d4bb7, _0x4e6c53, _0x4f2c84, _0x4eb0b0) {
        const _0x2921b7 = a0_0x6cbe4f;
        for (; 0.5 * _0x5d4bb7[_0x2921b7(0x1f3)] > _0x4e6c53 && 0.5 * _0x5d4bb7[_0x2921b7(0xd9)] > _0x4f2c84; )
            if (!(_0x5d4bb7 = this[_0x2921b7(0x17c)](_0x5d4bb7, _0x5d4bb7[_0x2921b7(0x1f3)] / 0x2, _0x5d4bb7[_0x2921b7(0xd9)] / 0x2)))
                return !0x1;
        return this[_0x2921b7(0x17c)](_0x5d4bb7, _0x4e6c53, _0x4f2c84, _0x4eb0b0);
    },
    'resize'(_0x40c136, _0x3cc3f3, _0x49bec4, _0x13874b) {
        const _0x28e60f = a0_0x6cbe4f
          , _0x26d922 = document[_0x28e60f(0x135)]('canvas')
          , _0x4cea59 = _0x26d922[_0x28e60f(0x153)]('2d');
        return !!_0x4cea59 && (_0x13874b || (_0x13874b = 0x0),
        _0x26d922[_0x28e60f(0x1f3)] = _0x3cc3f3 + _0x13874b * _0x3cc3f3,
        _0x26d922[_0x28e60f(0xd9)] = _0x49bec4 + _0x13874b * _0x49bec4,
        _0x4cea59[_0x28e60f(0xfb)](_0x40c136, 0x0, 0x0, _0x40c136['width'], _0x40c136['height'], (_0x26d922['width'] - _0x3cc3f3) / 0x2, (_0x26d922['height'] - _0x49bec4) / 0x2, _0x3cc3f3, _0x49bec4),
        _0x40c136 instanceof HTMLCanvasElement && (_0x40c136[_0x28e60f(0x1f3)] = _0x40c136[_0x28e60f(0xd9)] = 0x0),
        _0x26d922);
    },
    'getLinearGradient': function(_0x38a710, _0x3c9ff4, _0x1a7e82, _0x5d81a9, _0x457ae3, _0x39c99a, _0x576686, _0x27df9f) {
        const _0x3b9860 = a0_0x6cbe4f;
        _0x576686 = (-0x1 * _0x576686 + 0xb4) % 0x168,
        _0x576686 = TextEditorUtil[_0x3b9860(0x150)](_0x576686);
        const _0x48bb1c = (_0x13dbdd, _0x58d464, _0x157e26) => {
            const _0x1bb25c = _0x3b9860
              , _0x2eec00 = _0x5d81a9 / 0x2
              , _0x336a1e = _0x457ae3 / 0x2;
            return Math[_0x1bb25c(0x1c8)](Math[_0x1bb25c(0x1d9)](_0x157e26) * (_0x13dbdd - _0x2eec00) - Math[_0x1bb25c(0xd0)](_0x157e26) * (_0x58d464 - _0x336a1e));
        }
          , _0x1a57c7 = Math['max'](_0x48bb1c(0x0, 0x0, _0x576686), _0x48bb1c(0x0, _0x457ae3, _0x576686))
          , _0x41470c = Math['cos'](_0x576686) * _0x1a57c7
          , _0x1cee1f = Math['sin'](_0x576686) * _0x1a57c7
          , _0x13e498 = _0x38a710['createLinearGradient'](_0x5d81a9 / 0x2 + _0x41470c + _0x3c9ff4, _0x457ae3 / 0x2 + _0x1cee1f + _0x1a7e82, _0x5d81a9 / 0x2 - _0x41470c + _0x3c9ff4, _0x457ae3 / 0x2 - _0x1cee1f + _0x1a7e82);
        let _0x28accf;
        for (let _0x2dfd85 = 0x0; _0x2dfd85 < _0x39c99a['length']; _0x2dfd85++) {
            _0x28accf = _0x39c99a[_0x2dfd85],
            _0x28accf['r'] = _0x28accf['r'] ? _0x28accf['r'] : 0x0,
            _0x28accf['g'] = _0x28accf['g'] ? _0x28accf['g'] : 0x0,
            _0x28accf['b'] = _0x28accf['b'] ? _0x28accf['b'] : 0x0;
            let _0x5758ed = void 0x0 !== _0x28accf['a'] ? _0x28accf['a'] : 0x1;
            _0x5758ed *= _0x27df9f,
            _0x28accf[_0x3b9860(0xfa)] = _0x28accf[_0x3b9860(0xfa)] ? _0x28accf[_0x3b9860(0xfa)] : 0x0,
            _0x13e498[_0x3b9860(0xa8)](_0x28accf[_0x3b9860(0xfa)], _0x3b9860(0x10e) + _0x28accf['r'] + ',' + _0x28accf['g'] + ',' + _0x28accf['b'] + ',' + _0x5758ed + ')');
        }
        return _0x13e498;
    },
    'drawLinearGradient': function(_0x9b6946, _0x5d3d41, _0x2b4c39, _0x28ea28, _0x38d506, _0x2c4c8c, _0x26bc94, _0x5cde3a, _0x3f9854) {
        const _0x2de067 = a0_0x6cbe4f
          , _0x3c518b = TextEditorUtil['getLinearGradient'](_0x9b6946, _0x5d3d41, _0x2b4c39, _0x28ea28, _0x38d506, _0x2c4c8c, _0x26bc94, _0x5cde3a);
        _0x9b6946[_0x2de067(0x1b6)](),
        _0x3f9854 && (_0x9b6946[_0x2de067(0x12f)] = _0x3f9854),
        _0x9b6946[_0x2de067(0x107)] = _0x3c518b,
        _0x9b6946[_0x2de067(0x15f)](_0x5d3d41, _0x2b4c39, _0x28ea28, _0x38d506),
        _0x9b6946[_0x2de067(0x1ba)]();
    },
    'getRadialGradient': function(_0x11f10a, _0xae8871, _0x5d4620, _0x1c91c9, _0x4a67b8, _0x1c4c45, _0xbdc21) {
        const _0x14c3c6 = a0_0x6cbe4f
          , _0x46dc98 = _0x11f10a[_0x14c3c6(0x133)](_0x1c91c9 / 0x2 + _0xae8871, _0x4a67b8 / 0x2 + _0x5d4620, 0x0, _0x1c91c9 / 0x2 + _0xae8871, _0x4a67b8 / 0x2 + _0x5d4620, Math[_0x14c3c6(0x1e8)](_0x1c91c9, _0x4a67b8));
        let _0x311ac1;
        for (let _0xea8d85 = 0x0; _0xea8d85 < _0x1c4c45[_0x14c3c6(0x126)]; _0xea8d85++) {
            _0x311ac1 = _0x1c4c45[_0xea8d85],
            _0x311ac1['r'] = _0x311ac1['r'] ? _0x311ac1['r'] : 0x0,
            _0x311ac1['g'] = _0x311ac1['g'] ? _0x311ac1['g'] : 0x0,
            _0x311ac1['b'] = _0x311ac1['b'] ? _0x311ac1['b'] : 0x0,
            _0x311ac1[_0x14c3c6(0xfa)] = _0x311ac1['pos'] ? _0x311ac1[_0x14c3c6(0xfa)] : 0x0;
            let _0x35d697 = void 0x0 !== _0x311ac1['a'] ? _0x311ac1['a'] : 0x1;
            _0x35d697 *= _0xbdc21,
            _0x46dc98[_0x14c3c6(0xa8)](_0x311ac1[_0x14c3c6(0xfa)], _0x14c3c6(0x10e) + _0x311ac1['r'] + ',' + _0x311ac1['g'] + ',' + _0x311ac1['b'] + ',' + _0x35d697 + ')');
        }
        return _0x46dc98;
    },
    'drawRadialGradient': function(_0x2189b0, _0x224616, _0x2f2f56, _0x99c2b8, _0x21ed47, _0x25e141, _0x247d6b, _0x3993d0, _0x583509=!0x0) {
        const _0x2bcf4f = a0_0x6cbe4f;
        let _0x56affd = 0x1
          , _0x4b6494 = 0x1;
        _0x583509 && (_0x21ed47 > _0x99c2b8 ? (_0x56affd = _0x99c2b8 / _0x21ed47,
        _0x4b6494 = 0x1) : (_0x56affd = 0x1,
        _0x4b6494 = _0x21ed47 / _0x99c2b8));
        const _0x1c6cff = TextEditorUtil[_0x2bcf4f(0x161)](_0x2189b0, _0x224616, _0x2f2f56, _0x99c2b8 / _0x56affd, _0x21ed47 / _0x4b6494, _0x25e141, _0x247d6b);
        _0x2189b0[_0x2bcf4f(0x1b6)](),
        _0x3993d0 && (_0x2189b0[_0x2bcf4f(0x12f)] = _0x3993d0),
        _0x2189b0[_0x2bcf4f(0x110)](_0x56affd, _0x4b6494),
        _0x2189b0[_0x2bcf4f(0x107)] = _0x1c6cff,
        _0x2189b0[_0x2bcf4f(0x15f)](_0x224616, _0x2f2f56, _0x99c2b8 / _0x56affd, _0x21ed47 / _0x4b6494),
        _0x2189b0[_0x2bcf4f(0xb9)](0x1, 0x0, 0x0, 0x1, 0x0, 0x0),
        _0x2189b0['restore']();
    },
    'drawSolidColor': function(_0x5e5e08, _0x3df751, _0x769c38, _0x465426, _0x1b367d, _0x5dff7c, _0x5952a2, _0x3cdd2a) {
        const _0x1715a7 = a0_0x6cbe4f;
        _0x5e5e08['save'](),
        _0x3cdd2a && (_0x5e5e08['globalCompositeOperation'] = _0x3cdd2a),
        _0x5e5e08[_0x1715a7(0x107)] = _0x1715a7(0x154) + _0x5dff7c['r'] + ',' + _0x5dff7c['g'] + ',' + _0x5dff7c['b'] + ',' + _0x5952a2 + ')',
        _0x5e5e08[_0x1715a7(0x15f)](_0x3df751, _0x769c38, _0x465426, _0x1b367d),
        _0x5e5e08[_0x1715a7(0x1ba)]();
    },
    'isSvgFromDataURL': _0x102cf9 => _0x102cf9 && -0x1 !== _0x102cf9['substring'](0x0, 0x14)[a0_0x6cbe4f(0x12b)](a0_0x6cbe4f(0x159)),
    'fileReader': (_0x598841, _0x573794, _0x10b5bf) => new Promise( (_0x8d879a, _0x25be98) => {
        const _0x1a3165 = a0_0x6cbe4f
          , _0x154304 = new FileReader();
        _0x154304[_0x1a3165(0x189)] = _0xe3f92b => {
            const _0xefb66a = _0x1a3165;
            _0x8d879a(_0xe3f92b[_0xefb66a(0x1ec)][_0xefb66a(0x16c)]);
        }
        ,
        _0x154304[_0x1a3165(0x1c9)] = _0x17ba25 => {
            _0x10b5bf ? _0x8d879a(!0x1) : _0x25be98(_0x17ba25);
        }
        ,
        _0x154304[_0x573794](_0x598841);
    }
    ),
    'getCanvasFromImg': _0x1c7828 => {
        const _0x17a3d2 = a0_0x6cbe4f
          , _0x4c27c7 = document['createElement'](_0x17a3d2(0xf7));
        return _0x4c27c7['height'] = _0x1c7828[_0x17a3d2(0x17d)],
        _0x4c27c7['width'] = _0x1c7828[_0x17a3d2(0x115)],
        _0x4c27c7[_0x17a3d2(0x153)]('2d')[_0x17a3d2(0xfb)](_0x1c7828, 0x0, 0x0),
        _0x4c27c7;
    }
    ,
    'fetch': (_0x485fae, _0x402899, _0x4fbf73) => new Promise( (_0x4b0012, _0x28ed5e) => {
        const _0x553e2a = a0_0x6cbe4f;
        fetch(_0x485fae)['then'](_0x23951a => {
            const _0x4c36d5 = a0_0x4a3e;
            switch (_0x402899) {
            case _0x4c36d5(0x17e):
                return _0x23951a[_0x4c36d5(0x17e)]();
            case _0x4c36d5(0x193):
                return _0x23951a['blob']();
            case _0x4c36d5(0x197):
                return _0x23951a[_0x4c36d5(0x197)]();
            default:
                return _0x23951a['text']();
            }
        }
        )[_0x553e2a(0x15c)](_0x2fd3f9 => {
            _0x4b0012(_0x2fd3f9);
        }
        )[_0x553e2a(0x195)](_0x11e00d => {
            _0x4fbf73 ? _0x4b0012(!0x1) : _0x28ed5e(_0x11e00d);
        }
        );
    }
    ),
    'ready': _0xa6e636 => new Promise(_0x51a8c2 => {
        const _0x17382d = a0_0x6cbe4f;
        _0x17382d(0x1df) !== document[_0x17382d(0x1fe)] && _0x17382d(0x19e) !== document[_0x17382d(0x1fe)] ? document['addEventListener']('DOMContentLoaded', function(_0x4e28d6) {
            _0x51a8c2();
        }) : _0x51a8c2();
    }
    ),
    'getText': _0x36c0db => {
        const _0x2053c7 = a0_0x6cbe4f;
        if (!this[_0x2053c7(0x1c4)])
            try {
                this[_0x2053c7(0x1c4)] = JSON[_0x2053c7(0x1ad)](window[_0x2053c7(0x15e)](getById('tt')['getAttribute'](_0x2053c7(0x137))));
            } catch (_0x5b82be) {
                return console[_0x2053c7(0x1f9)](_0x5b82be),
                '';
            }
        return this['_dataTexts'][_0x36c0db] ? this['_dataTexts'][_0x36c0db] : '';
    }
    ,
    'dataURLToSVGStr'(_0x4ed4cc) {
        const _0x5ae285 = a0_0x6cbe4f;
        if (_0x4ed4cc[_0x5ae285(0xe7)](_0x5ae285(0x9c))) {
            if (-0x1 === _0x4ed4cc[_0x5ae285(0x12b)](','))
                return !0x1;
            if (-0x1 !== _0x4ed4cc['indexOf']('base64')) {
                const _0x426ca9 = _0x4ed4cc[_0x5ae285(0x1fd)](',')[0x1];
                return window[_0x5ae285(0x15e)](_0x426ca9);
            }
            {
                const _0x8db3f7 = _0x4ed4cc[_0x5ae285(0x1fd)](',')[0x1];
                return decodeURIComponent(_0x8db3f7);
            }
        }
        return !0x1;
    },
    'SVGStrToDataURL': _0x31cadd => a0_0x6cbe4f(0x14e) + window[a0_0x6cbe4f(0x196)](unescape(encodeURIComponent(_0x31cadd))),
    'getSVGNodeFromStr'(_0x3223b2) {
        const _0x22ff32 = a0_0x6cbe4f
          , _0x3cac4e = new DOMParser()['parseFromString'](_0x3223b2, _0x22ff32(0x155));
        if (_0x3cac4e['querySelector'](_0x22ff32(0x1ce)))
            return !0x1;
        return _0x3cac4e[_0x22ff32(0x1dd)];
    },
    'getStrFromSVGNode': _0x59bdf2 => new XMLSerializer()[a0_0x6cbe4f(0x1d8)](_0x59bdf2),
    'cleanSizeSvgStr'(_0x1f80ad) {
        const _0x11378d = a0_0x6cbe4f
          , _0x3a0e24 = document[_0x11378d(0x135)](_0x11378d(0x162));
        _0x3a0e24['innerHTML'] = _0x1f80ad,
        _0x3a0e24[_0x11378d(0x185)][_0x11378d(0x1d2)] = _0x11378d(0x1ea),
        _0x3a0e24[_0x11378d(0x185)][_0x11378d(0xd4)] = _0x11378d(0xa1),
        document['body'][_0x11378d(0xa9)](_0x3a0e24);
        const _0x90d44b = _0x3a0e24[_0x11378d(0x20e)](_0x11378d(0x159))[0x0]
          , _0x10dee0 = _0x90d44b[_0x11378d(0x147)]();
        if (Math[_0x11378d(0xa0)](_0x10dee0['x']) < 0x0 || Math[_0x11378d(0xa0)](_0x10dee0['y']) < 0x0)
            return _0x3a0e24[_0x11378d(0xb0)](),
            _0x1f80ad;
        const _0x2a1739 = [_0x10dee0['x'], _0x10dee0['y'], _0x10dee0[_0x11378d(0x1f3)], _0x10dee0[_0x11378d(0xd9)]]['join']('\x20');
        return _0x90d44b[_0x11378d(0x106)](_0x11378d(0xff), _0x2a1739),
        _0x90d44b['setAttribute'](_0x11378d(0x1f3), _0x10dee0[_0x11378d(0x1f3)]),
        _0x90d44b[_0x11378d(0x106)](_0x11378d(0xd9), _0x10dee0[_0x11378d(0xd9)]),
        _0x1f80ad = _0x90d44b[_0x11378d(0x173)],
        _0x3a0e24[_0x11378d(0xb0)](),
        _0x1f80ad;
    },
    'cleanSizeSvgDataURL'(_0x370a40) {
        const _0x144968 = a0_0x6cbe4f;
        let _0x516848 = _0x370a40[_0x144968(0x1fd)](',')[0x1]
          , _0x4279af = window[_0x144968(0x15e)](_0x516848);
        return _0x4279af = TextEditorUtil['cleanSizeSvgStr'](_0x4279af),
        _0x516848 = window['btoa'](_0x4279af),
        'data:image/svg+xml;base64,' + _0x516848;
    },
    'supportDataURLWebP'() {
        const _0x1b8572 = a0_0x6cbe4f;
        if (void 0x0 !== this[_0x1b8572(0x129)])
            return this[_0x1b8572(0x129)];
        const _0x2fb16e = document[_0x1b8572(0x135)](_0x1b8572(0xf7));
        _0x2fb16e[_0x1b8572(0x1f3)] = _0x2fb16e['height'] = 0x1;
        const _0x25c0f2 = -0x1 !== _0x2fb16e[_0x1b8572(0x191)](_0x1b8572(0x140))[_0x1b8572(0x12b)](_0x1b8572(0x15a));
        return this['supportDataURLWebP_supported'] = _0x25c0f2,
        _0x2fb16e[_0x1b8572(0x1f3)] = _0x2fb16e[_0x1b8572(0xd9)] = 0x0,
        _0x25c0f2;
    },
    'supper': (_0x28bdf6, _0x6dc296) => _0x6dc296[a0_0x6cbe4f(0x188)](/.{1,2}/g)[a0_0x6cbe4f(0x14c)](_0x20c50f => parseInt(_0x20c50f, 0x10))['map'](_0x78b4c7 => _0x28bdf6[a0_0x6cbe4f(0x13a)]( (_0x42633e, _0x17f023) => _0x42633e ^ _0x17f023, _0x78b4c7))[a0_0x6cbe4f(0x14c)](_0x477996 => String[a0_0x6cbe4f(0x12d)](_0x477996))[a0_0x6cbe4f(0xf8)](''),
    'normalizeImageSrc': function(_0xaa66f8) {
        const _0x1f67bd = a0_0x6cbe4f;
        if (!_0xaa66f8?.[_0x1f67bd(0xe7)]('output://'))
            return _0xaa66f8;
        const _0x246167 = _0xaa66f8[_0x1f67bd(0x1fd)]('//')[0x1];
        return url('output/' + _0x246167, !0x1);
    },
    'getSvgStretchableSrc': async function(_0x141ff5) {
        const _0x14961d = a0_0x6cbe4f;
        this['_svgStretchableCache'] || (this[_0x14961d(0xe8)] = {});
        const _0x1f2b63 = this['cyrb53'](_0x141ff5);
        if (this[_0x14961d(0xe8)][_0x1f2b63])
            return this[_0x14961d(0xe8)][_0x1f2b63];
        {
            let _0x26046f = _0x141ff5;
            try {
                let _0x9cc25f;
                _0x9cc25f = _0x141ff5[_0x14961d(0xe7)](_0x14961d(0x15b)) ? this[_0x14961d(0xe1)](_0x141ff5) : await fetch(_0x141ff5)[_0x14961d(0x15c)](_0x50b66f => _0x50b66f['text']());
                const _0x57ffd6 = this['getSVGNodeFromStr'](_0x9cc25f);
                _0x57ffd6['setAttribute'](_0x14961d(0x12c), _0x14961d(0xfe)),
                _0x9cc25f = this[_0x14961d(0xc7)](_0x57ffd6),
                _0x26046f = this[_0x14961d(0xbf)](_0x9cc25f);
            } catch (_0xbc1de3) {}
            return this[_0x14961d(0xe8)][_0x1f2b63] = _0x26046f,
            _0x26046f;
        }
    },
    'drawBackgroundCanvas': async function(_0x36d6de, _0x358eb9) {
        const _0x3ec16d = a0_0x6cbe4f
          , _0x36381d = _0x36d6de['canvas']
          , _0x41c5eb = void 0x0 !== _0x358eb9[_0x3ec16d(0x1bd)][_0x3ec16d(0x181)] ? _0x358eb9[_0x3ec16d(0x1bd)]['alpha'] : 0x1;
        if (0x1 === _0x358eb9[_0x3ec16d(0x1bd)]['gradient'][_0x3ec16d(0x100)] && _0x358eb9[_0x3ec16d(0x1bd)][_0x3ec16d(0x1d0)][_0x3ec16d(0x11f)] && _0x358eb9[_0x3ec16d(0x1bd)][_0x3ec16d(0x1d0)][_0x3ec16d(0x11f)]['length'] > 0x0)
            _0x3ec16d(0x1cb) === _0x358eb9['fill'][_0x3ec16d(0x1d0)][_0x3ec16d(0xb6)] ? TextEditorUtil[_0x3ec16d(0x1a0)](_0x36d6de, 0x0, 0x0, _0x36381d[_0x3ec16d(0x1f3)], _0x36381d['height'], _0x358eb9['fill'][_0x3ec16d(0x1d0)][_0x3ec16d(0x11f)], _0x41c5eb) : TextEditorUtil[_0x3ec16d(0x9a)](_0x36d6de, 0x0, 0x0, _0x36381d[_0x3ec16d(0x1f3)], _0x36381d['height'], _0x358eb9[_0x3ec16d(0x1bd)][_0x3ec16d(0x1d0)][_0x3ec16d(0x11f)], _0x358eb9[_0x3ec16d(0x1bd)][_0x3ec16d(0x1d0)][_0x3ec16d(0x166)], _0x41c5eb);
        else {
            let _0x6c6eea = _0x41c5eb;
            void 0x0 !== _0x358eb9[_0x3ec16d(0x1bd)][_0x3ec16d(0x201)]['a'] && (_0x6c6eea *= _0x358eb9[_0x3ec16d(0x1bd)]['color']['a']),
            _0x36d6de[_0x3ec16d(0x107)] = _0x3ec16d(0x10e) + _0x358eb9[_0x3ec16d(0x1bd)][_0x3ec16d(0x201)]['r'] + ',' + _0x358eb9['fill'][_0x3ec16d(0x201)]['g'] + ',' + _0x358eb9['fill'][_0x3ec16d(0x201)]['b'] + ',' + _0x6c6eea + ')',
            _0x36d6de[_0x3ec16d(0x15f)](0x0, 0x0, _0x36381d[_0x3ec16d(0x1f3)], _0x36381d[_0x3ec16d(0xd9)]);
        }
        if (_0x358eb9[_0x3ec16d(0x1bd)][_0x3ec16d(0x146)] && _0x358eb9[_0x3ec16d(0x1bd)][_0x3ec16d(0x146)]['src'] && 0x1 === _0x358eb9[_0x3ec16d(0x1bd)][_0x3ec16d(0x146)][_0x3ec16d(0x100)]) {
            let _0x1c1419, _0x5ad467, _0x3fe1f9 = TextEditorUtil['normalizeImageSrc'](_0x358eb9[_0x3ec16d(0x1bd)][_0x3ec16d(0x146)][_0x3ec16d(0xab)]);
            const _0x2afeb3 = _0x358eb9[_0x3ec16d(0x1bd)][_0x3ec16d(0x146)]['size'];
            if (_0x3fe1f9?.['endsWith']('.svg') && !_0x3fe1f9?.[_0x3ec16d(0xe7)](_0x3ec16d(0x15b))) {
                const _0x223d33 = await fetch(_0x3fe1f9)[_0x3ec16d(0x15c)](_0x168f7c => _0x168f7c[_0x3ec16d(0x139)]());
                _0x3fe1f9 = TextEditorUtil['SVGStrToDataURL'](_0x223d33),
                _0x5ad467 = !0x0;
            } else
                _0x5ad467 = TextEditorUtil[_0x3ec16d(0x11d)](_0x3fe1f9);
            if (_0x5ad467) {
                const _0x3ac51f = new ResizeSVG();
                if (_0x3ac51f[_0x3ec16d(0x1ad)](_0x3fe1f9)) {
                    let _0x39ad9d = _0x3ac51f[_0x3ec16d(0x1f3)]
                      , _0xf090ab = _0x3ac51f[_0x3ec16d(0xd9)];
                    if (_0x3ec16d(0xc6) === _0x2afeb3)
                        _0x39ad9d !== _0x36381d['width'] && (_0xf090ab = _0x36381d[_0x3ec16d(0x1f3)] / _0x39ad9d * _0xf090ab,
                        _0x39ad9d = _0x36381d['width']),
                        _0xf090ab < _0x36381d[_0x3ec16d(0xd9)] && (_0x39ad9d = _0x36381d[_0x3ec16d(0xd9)] / _0xf090ab * _0x39ad9d,
                        _0xf090ab = _0x36381d[_0x3ec16d(0xd9)]);
                    else {
                        if ('contain' === _0x2afeb3)
                            _0x39ad9d !== _0x36381d[_0x3ec16d(0x1f3)] && (_0xf090ab = _0x36381d[_0x3ec16d(0x1f3)] / _0x39ad9d * _0xf090ab,
                            _0x39ad9d = _0x36381d[_0x3ec16d(0x1f3)]),
                            _0xf090ab > _0x36381d[_0x3ec16d(0xd9)] && (_0x39ad9d = _0x36381d['height'] / _0xf090ab * _0x39ad9d,
                            _0xf090ab = _0x36381d[_0x3ec16d(0xd9)]);
                        else {
                            if (_0x3ec16d(0x156) === _0x2afeb3)
                                _0x39ad9d = _0x36381d[_0x3ec16d(0x1f3)],
                                _0xf090ab = _0x36381d['height'];
                            else {
                                const _0x5cfe3b = Math[_0x3ec16d(0x1e8)](0x1, _0x36381d[_0x3ec16d(0x1f3)] * _0x2afeb3);
                                _0xf090ab *= _0x5cfe3b / _0x39ad9d,
                                _0x39ad9d = _0x5cfe3b;
                            }
                        }
                    }
                    _0x3ac51f[_0x3ec16d(0x17c)](_0x39ad9d, _0xf090ab);
                    let _0x2a59bc = _0x3ac51f[_0x3ec16d(0x1a5)]();
                    _0x3ec16d(0x156) === _0x2afeb3 && (_0x2a59bc = await TextEditorUtil[_0x3ec16d(0x148)](_0x2a59bc)),
                    _0x1c1419 = await TextEditorUtil[_0x3ec16d(0x1cc)](_0x2a59bc);
                }
            } else
                _0x1c1419 = await TextEditorUtil[_0x3ec16d(0x1cc)](_0x3fe1f9);
            if (!_0x1c1419)
                return;
            const _0x331b51 = this[_0x3ec16d(0x149)]() && _0x5ad467;
            if (_0x3ec16d(0xc6) === _0x2afeb3) {
                let _0x5969a6 = _0x1c1419['naturalWidth']
                  , _0x20028e = _0x1c1419[_0x3ec16d(0x17d)];
                _0x5969a6 !== _0x36381d[_0x3ec16d(0x1f3)] && (_0x20028e = _0x36381d['width'] / _0x5969a6 * _0x20028e,
                _0x5969a6 = _0x36381d[_0x3ec16d(0x1f3)]),
                _0x20028e < _0x36381d['height'] && (_0x5969a6 = _0x36381d[_0x3ec16d(0xd9)] / _0x20028e * _0x5969a6,
                _0x20028e = _0x36381d[_0x3ec16d(0xd9)]);
                let _0x2ebf83 = _0x1c1419;
                (_0x331b51 || _0x1c1419[_0x3ec16d(0x115)] != _0x5969a6 || _0x1c1419['naturalHeight'] != _0x20028e) && (_0x2ebf83 = await TextEditorUtil[_0x3ec16d(0x17c)](_0x1c1419, _0x5969a6, _0x20028e)),
                _0x36d6de['save'](),
                _0x36d6de[_0x3ec16d(0x102)] = _0x358eb9[_0x3ec16d(0x1bd)][_0x3ec16d(0x146)][_0x3ec16d(0x181)],
                _0x36d6de[_0x3ec16d(0xfb)](_0x2ebf83, (_0x36381d['width'] - _0x2ebf83[_0x3ec16d(0x1f3)]) / 0x2, (_0x36381d[_0x3ec16d(0xd9)] - _0x2ebf83['height']) / 0x2),
                _0x36d6de[_0x3ec16d(0x1ba)](),
                _0x2ebf83[_0x3ec16d(0x1f3)] = _0x2ebf83[_0x3ec16d(0xd9)] = 0x0;
            } else {
                if (_0x3ec16d(0x156) === _0x2afeb3) {
                    let _0x1185f7 = _0x36381d[_0x3ec16d(0x1f3)]
                      , _0xafd9fe = _0x36381d[_0x3ec16d(0xd9)]
                      , _0x4b5c8d = _0x1c1419;
                    (_0x331b51 || _0x1c1419['naturalWidth'] != _0x1185f7 || _0x1c1419['naturalHeight'] != _0xafd9fe) && (_0x4b5c8d = await TextEditorUtil[_0x3ec16d(0x17c)](_0x1c1419, _0x1185f7, _0xafd9fe)),
                    _0x36d6de[_0x3ec16d(0x1b6)](),
                    _0x36d6de[_0x3ec16d(0x102)] = _0x358eb9[_0x3ec16d(0x1bd)][_0x3ec16d(0x146)][_0x3ec16d(0x181)],
                    _0x36d6de['drawImage'](_0x4b5c8d, 0x0, 0x0),
                    _0x36d6de[_0x3ec16d(0x1ba)](),
                    _0x4b5c8d['width'] = _0x4b5c8d[_0x3ec16d(0xd9)] = 0x0;
                } else {
                    let _0x366bd6;
                    _0x3ec16d(0x10b) === _0x2afeb3 ? (_0x366bd6 = _0x36381d[_0x3ec16d(0x1f3)],
                    _0x366bd6 / _0x1c1419[_0x3ec16d(0x115)] * _0x1c1419['naturalHeight'] > _0x36381d[_0x3ec16d(0xd9)] && (_0x366bd6 = _0x36381d[_0x3ec16d(0xd9)] / _0x1c1419[_0x3ec16d(0x17d)] * _0x1c1419[_0x3ec16d(0x115)])) : _0x366bd6 = Math[_0x3ec16d(0x1e8)](0x1, _0x36381d[_0x3ec16d(0x1f3)] * _0x2afeb3);
                    const _0x1a56c8 = _0x366bd6
                      , _0x14d616 = _0x366bd6 / _0x1c1419[_0x3ec16d(0x115)] * _0x1c1419[_0x3ec16d(0x17d)];
                    let _0x4776c5 = _0x1c1419;
                    if ((_0x331b51 || _0x1c1419['naturalWidth'] != _0x1a56c8 || _0x1c1419[_0x3ec16d(0x17d)] != _0x14d616) && (_0x4776c5 = await TextEditorUtil[_0x3ec16d(0x17c)](_0x1c1419, _0x1a56c8, _0x14d616)),
                    _0x36d6de['save'](),
                    _0x3ec16d(0x190) === _0x358eb9[_0x3ec16d(0x1bd)][_0x3ec16d(0x146)][_0x3ec16d(0x199)])
                        _0x36d6de[_0x3ec16d(0x102)] = _0x358eb9[_0x3ec16d(0x1bd)][_0x3ec16d(0x146)][_0x3ec16d(0x181)],
                        _0x36d6de[_0x3ec16d(0xfb)](_0x4776c5, (_0x36381d[_0x3ec16d(0x1f3)] - _0x4776c5['width']) / 0x2, (_0x36381d['height'] - _0x4776c5[_0x3ec16d(0xd9)]) / 0x2);
                    else {
                        const _0x97d79e = _0x36381d['height'] / 0x2
                          , _0x3c7c3c = _0x97d79e - (Math['ceil'](_0x97d79e / _0x4776c5[_0x3ec16d(0xd9)]) * _0x4776c5[_0x3ec16d(0xd9)] + _0x4776c5[_0x3ec16d(0xd9)] / 0x2)
                          , _0x2cbc3d = _0x36381d['width'] / 0x2
                          , _0x46cb4c = _0x2cbc3d - (Math[_0x3ec16d(0x19d)](_0x2cbc3d / _0x4776c5[_0x3ec16d(0x1f3)]) * _0x4776c5[_0x3ec16d(0x1f3)] + _0x4776c5[_0x3ec16d(0x1f3)] / 0x2)
                          , _0x10ed6a = Math[_0x3ec16d(0x19d)](_0x36381d[_0x3ec16d(0x1f3)] / _0x4776c5[_0x3ec16d(0x1f3)]) * _0x4776c5[_0x3ec16d(0x1f3)] + Math['abs'](_0x46cb4c)
                          , _0x3bde4b = Math[_0x3ec16d(0x19d)](_0x36381d['height'] / _0x4776c5[_0x3ec16d(0xd9)]) * _0x4776c5['height'] + Math[_0x3ec16d(0x1c8)](_0x3c7c3c);
                        _0x36d6de['setTransform'](0x1, 0x0, 0x0, 0x1, _0x46cb4c, _0x3c7c3c);
                        const _0x3df225 = _0x36d6de[_0x3ec16d(0xec)](_0x4776c5, _0x3ec16d(0x199));
                        _0x36d6de['globalAlpha'] = _0x358eb9[_0x3ec16d(0x1bd)][_0x3ec16d(0x146)][_0x3ec16d(0x181)],
                        _0x36d6de['fillStyle'] = _0x3df225,
                        _0x36d6de[_0x3ec16d(0x15f)](0x0, 0x0, _0x10ed6a, _0x3bde4b);
                    }
                    _0x36d6de[_0x3ec16d(0x1ba)](),
                    _0x4776c5[_0x3ec16d(0x1f3)] = _0x4776c5[_0x3ec16d(0xd9)] = 0x0;
                }
            }
        }
    },
    'setBackgroundNode': async function(_0xddb9f6, _0x37c4b9, _0x1d9902, _0x2a499d) {
        const _0x3ae9f2 = a0_0x6cbe4f;
        if (!_0x37c4b9)
            return _0xddb9f6;
        void 0x0 !== _0x37c4b9['alpha'] && (_0xddb9f6['style'][_0x3ae9f2(0x1c0)] = _0x37c4b9[_0x3ae9f2(0x181)]);
        let _0x41fb79 = '';
        if (_0x37c4b9[_0x3ae9f2(0x1d0)] && _0x37c4b9['gradient'][_0x3ae9f2(0x11f)] && _0x37c4b9[_0x3ae9f2(0x1d0)][_0x3ae9f2(0x11f)][_0x3ae9f2(0x126)] > 0x0 && 0x1 === _0x37c4b9[_0x3ae9f2(0x1d0)][_0x3ae9f2(0x100)]) {
            if ('radial' === _0x37c4b9[_0x3ae9f2(0x1d0)]['type'])
                _0x41fb79 += _0x3ae9f2(0x1f2);
            else
                _0x41fb79 += _0x3ae9f2(0x131) + (-0x1 * _0x37c4b9['gradient'][_0x3ae9f2(0x166)] + 0x5a + _0x3ae9f2(0x1a8)) + '\x20';
            for (let _0x3aea58 = 0x0; _0x3aea58 < _0x37c4b9['gradient'][_0x3ae9f2(0x11f)]['length']; _0x3aea58++) {
                _0x41fb79 += ',\x20' + TextEditorUtil[_0x3ae9f2(0xc5)](_0x37c4b9['gradient'][_0x3ae9f2(0x11f)][_0x3aea58]) + '\x20' + 0x64 * _0x37c4b9[_0x3ae9f2(0x1d0)][_0x3ae9f2(0x11f)][_0x3aea58][_0x3ae9f2(0xfa)] + '%';
            }
            _0x41fb79 += ')';
        } else
            _0x41fb79 += TextEditorUtil[_0x3ae9f2(0xc5)](_0x37c4b9['color']);
        let _0x2642a5 = _0xddb9f6['querySelector'](_0x3ae9f2(0x1ac));
        if (_0x2642a5 || (_0x2642a5 = document[_0x3ae9f2(0x135)](_0x3ae9f2(0x162))),
        _0x2642a5[_0x3ae9f2(0x185)][_0x3ae9f2(0x1d2)] = _0x3ae9f2(0x1ea),
        _0x2642a5['style'][_0x3ae9f2(0x206)] = _0x2642a5['style'][_0x3ae9f2(0x1e1)] = _0x2642a5[_0x3ae9f2(0x185)][_0x3ae9f2(0x141)] = _0x2642a5[_0x3ae9f2(0x185)]['left'] = 0x0,
        _0x2642a5[_0x3ae9f2(0x185)][_0x3ae9f2(0x136)] = _0x41fb79,
        _0xddb9f6[_0x3ae9f2(0xa9)](_0x2642a5),
        _0x37c4b9?.[_0x3ae9f2(0x146)]?.[_0x3ae9f2(0xab)] && 0x1 === _0x37c4b9?.[_0x3ae9f2(0x146)]?.[_0x3ae9f2(0x100)]) {
            const _0x12dcf4 = _0x37c4b9['image']['size'];
            let _0x3e8889, _0x178d24 = TextEditorUtil['normalizeImageSrc'](_0x37c4b9['image'][_0x3ae9f2(0xab)]);
            'stretch' === _0x12dcf4 && (_0x178d24 = await TextEditorUtil['getSvgStretchableSrc'](_0x178d24)),
            _0x3e8889 = _0x3ae9f2(0xc6) === _0x12dcf4 || _0x3ae9f2(0x10b) === _0x12dcf4 ? _0x12dcf4 : _0x3ae9f2(0x156) === _0x12dcf4 || isNaN(_0x12dcf4) ? _0x3ae9f2(0xee) : 0x64 * _0x12dcf4 + '%';
            let _0x40aff8 = _0xddb9f6['querySelector'](_0x3ae9f2(0x198));
            _0x40aff8 || (_0x40aff8 = document['createElement'](_0x3ae9f2(0x162))),
            _0x40aff8[_0x3ae9f2(0x185)][_0x3ae9f2(0x1d2)] = _0x3ae9f2(0x1ea),
            _0x40aff8[_0x3ae9f2(0x185)][_0x3ae9f2(0x206)] = _0x40aff8['style'][_0x3ae9f2(0x1e1)] = _0x40aff8[_0x3ae9f2(0x185)]['bottom'] = _0x40aff8[_0x3ae9f2(0x185)][_0x3ae9f2(0xd4)] = 0x0,
            _0x40aff8[_0x3ae9f2(0x185)][_0x3ae9f2(0xaa)] = 'url(\x27' + _0x178d24 + '\x27)',
            _0x40aff8[_0x3ae9f2(0x185)][_0x3ae9f2(0xdb)] = _0x3e8889,
            _0x40aff8[_0x3ae9f2(0x185)][_0x3ae9f2(0x1e2)] = _0x37c4b9[_0x3ae9f2(0x146)][_0x3ae9f2(0x199)],
            _0x40aff8[_0x3ae9f2(0x185)][_0x3ae9f2(0x202)] = _0x3ae9f2(0x1da),
            _0x40aff8['style'][_0x3ae9f2(0x1c0)] = _0x37c4b9['image'][_0x3ae9f2(0x181)],
            _0xddb9f6['appendChild'](_0x40aff8);
        }
        return _0xddb9f6;
    },
    'compressSVG': async function(_0x3ee3fd, _0xe015eb=[]) {
        const _0xeda975 = a0_0x6cbe4f;
        let _0x1dd1cd = [_0xeda975(0x1b8), _0xeda975(0x1a9), _0xeda975(0x1a3), _0xeda975(0xda), _0xeda975(0x114), 'mergeStyles', 'minifyStyles', 'convertStyleToAttrs', 'removeRasterImages', 'removeUselessDefs', _0xeda975(0x10d), 'cleanupListOfValues', _0xeda975(0x192), _0xeda975(0x200), _0xeda975(0xf2), _0xeda975(0xc8), _0xeda975(0xa6), 'collapseGroups', _0xeda975(0xc9), _0xeda975(0x1be), _0xeda975(0x160), _0xeda975(0xf0), 'removeUnusedNS', _0xeda975(0x104), _0xeda975(0xeb), _0xeda975(0x20b), _0xeda975(0x1c2), _0xeda975(0x142), {
            'name': 'inlineStyles',
            'params': {
                'onlyMatchedOnce': !0x1
            }
        }];
        if (_0xe015eb[_0xeda975(0x126)] > 0x0) {
            const _0x5e3627 = [];
            for (const _0x5bce2c of _0x1dd1cd)
                -0x1 === _0xe015eb['indexOf'](_0x5bce2c) && _0x5e3627['push'](_0x5bce2c);
            _0x1dd1cd = _0x5e3627;
        }
        return await TextEditorUtil[_0xeda975(0x18d)](),
        SVGO['optimize'](_0x3ee3fd, {
            'multipass': !0x1,
            'plugins': _0x1dd1cd
        })[_0xeda975(0x1f8)];
    },
    'getSVGO': async function() {
        const _0x47bec6 = a0_0x6cbe4f;
        if (window[_0x47bec6(0x116)])
            return !0x0;
        const _0x213b40 = url(_0x47bec6(0x18e));
        try {
            return await loadScriptFileAsync(_0x213b40),
            !0x0;
        } catch (_0x8c06da) {
            throw new Error(_0x47bec6(0x209) + _0x213b40);
        }
    }
};
function a0_0x46c8() {
    const _0x465236 = ['height', 'removeMetadata', 'backgroundSize', '#663399', '#d2691e', '#4682b4', '#1e90ff', 'destination-in', 'dataURLToSVGStr', 'body', '#4169e1', '0\x200\x20100\x20100', '#ee82ee', '#ff1493', 'startsWith', '_svgStretchableCache', 'Error\x20while\x20parse\x20SVG\x20string.', '_colors', 'removeTitle', 'createPattern', 'destination-atop', '100%\x20100%', '#66cdaa', 'mergePaths', '#f0ffff', 'removeNonInheritableGroupAttrs', 'insertBefore', 'keys', 'status', '#0000ff', 'canvas', 'join', 'data-already-parsed', 'pos', 'drawImage', '_normalizeColor', 'parentNode', 'none', 'viewBox', 'active', '#f0fff0', 'globalAlpha', '#000000', 'sortAttrs', '_height', 'setAttribute', 'fillStyle', '_svgDoc', 'charCodeAt', '#fafad2', 'contain', '#008000', 'cleanupNumericValues', 'rgba(', '#ffa07a', 'scale', '#9370d8', '#7fff00', 'line', 'removeEditorsNSData', 'naturalWidth', 'SVGO', 'ellipse', 'userAgent', '#00008b', 'rows', '#ff00ff', 'reverse', 'isSvgFromDataURL', 'getScaleDownSize', 'colors', 'stringify', '1130024qAOLtk', '#ffa500', 'getImageData', 'xor', 'source-out', 'length', 'load', 'circle', 'supportDataURLWebP_supported', 'parseFromString', 'indexOf', 'preserveAspectRatio', 'fromCharCode', '#87cefa', 'globalCompositeOperation', '_colorExists', 'linear-gradient(', '#4b0082', 'createRadialGradient', '#ff0000', 'createElement', 'background', 'data-texts', 'text/css', 'text', 'reduce', 'initial', '#00ff7f', 'className', '_fillElements', 'path', 'image/webp', 'bottom', 'cleanupIds', '#9400d3', '#808080', 'copy', 'image', 'getBBox', 'getSvgStretchableSrc', 'isIOS', '_trim', '#bc8f8f', 'map', '#800000', 'data:image/svg+xml;base64,', 'loading', 'degrad', '_width', 'test', 'getContext', 'rgb(', 'image/svg+xml', 'stretch', '#a9a9a9', '#ff4500', 'svg', 'data:image/webp', 'data:', 'then', '#f0e68c', 'atob', 'fillRect', 'removeEmptyContainers', 'getRadialGradient', 'div', '#faebd7', '#ffffe0', '#6b8e23', 'angle', '#483d8b', '__pica', '#ffc0cb', '#bdb76b', 'querySelectorAll', 'result', 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx', '#fdf5e6', 'COLORNAMES', '_gradientElements', '#eee8aa', 'pow', 'outerHTML', '#deb887', '#9acd32', '#2f4f4f', 'stopColor', '#ff6347', '#fff0f5', '#7cfc00', '#98fb98', 'resize', 'naturalHeight', 'arrayBuffer', 'imul', '#5f9ea0', 'alpha', '#ff00d8', '{[^:]+:([^;]+);}', 'isArray', 'style', '#dc143c', '4IwNUdN', 'match', 'onload', '#6a5acd', 'alreadyParsed', '#adff2f', 'getSVGO', 'asset/editor/svgo.min.js', '{[^}]+}', 'no-repeat', 'toDataURL', 'convertColors', 'blob', 'replace', 'catch', 'btoa', 'json', '.bg-image', 'repeat', 'substring', 'download', '#708090', 'ceil', 'complete', 'innerHTML', 'drawRadialGradient', 'trim', '_parseGradientElements', 'removeComments', '#d8bfd8', 'getDataURL', '225598RdLQAg', '#fffaf0', 'deg', 'removeXMLProcInst', 'stroke', 'FontFace', '.bg-color', 'parse', '#c71585', '#e9967a', '#008080', '#ff69b4', 'querySelector', '#ba55d3', '10370uPOyBw', '#ff8c00', 'save', '#ffe4e1', 'removeDoctype', '#556b2f', 'restore', '#c0c0c0', '#ffe4b5', 'fill', 'removeEmptyAttrs', '#da70d6', 'opacity', 'classList', 'removeScriptElement', '_resetElements', '_dataTexts', 'push', 'href', '#fffacd', 'abs', 'onerror', 'stop-color', 'radial', 'getImg', '180145hJAuOa', 'parsererror', '#228b22', 'gradient', 'source-atop', 'position', '_styleTag', 'class', '#f4a460', '#ffff00', '2295108UxlHtf', 'serializeToString', 'cos', 'center', '_parseFillElements', 'addEventListener', 'documentElement', '#00ced1', 'interactive', 'replaceColors', 'right', 'backgroundRepeat', 'transparent', '#ffdead', '#00fa9a', '2747318NWwyfc', '#00ffff', 'max', 'getAttribute', 'absolute', 'cols', 'target', 'toString', '#ffebcd', '#fa8072', '#8a2be2', 'url(\x22data:font/woff2;base64,d09GMgABAAAAAADwAAoAAAAAAiQAAACoAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAABmAALAogOAE2AiQDBgsGAAQgBSAHIBuDAciO1EZ3I/mL5/+5/rfPnTt9/9Qa8H4cUUZxaRbh36LiKJoVh61XGzw6ufkpoeZBW4KphwFYIJGHB4LAY4hby++gW+6N1EN94I49v86yCpUdYgqeZrOWN34CMQg2tAmthdli0eePIwAKNIIRS4AGZFzdX9lbBUAQlm//f262/61o8PlYO/D1/X4FrWFFgdCQD9DpGJSxmFyjOAGUU4P0qigcNb82GAAA\x22)\x20format(\x22woff2\x22)', 'radial-gradient(ellipse\x20at\x20center\x20', 'width', 'click', 'error', 'random', '#00ff00', 'data', 'log', '#fffff0', 'assign', 'destination-over', 'split', 'readyState', '#00bfff', 'removeUnknownsAndDefaults', 'color', 'backgroundPosition', '_generateClassName', 'source-over', '#d2b48c', 'top', '4UHHHKe', '_getStyleTag', 'Unable\x20to\x20get\x20SVGO:\x20', '#800080', 'removeDesc', 'stop', '#b0e0e6', 'getElementsByTagName', 'add', '#cd853f', '#dcdcdc', '_svg', '#6495ed', 'drawLinearGradient', 'getString', 'data:image/svg', 'removeProperty', 'polygon', '#8fbc8f', 'round', '-2000px', '#ff7f50', 'clip-path', 'anonymous', '_parseStrokeElements', 'removeEmptyText', 'slice', 'addColorStop', 'appendChild', 'backgroundImage', 'src', '#ffe4c4', '#9932cc', '#a52a2a', '_getColorFromClass', 'remove', '#daa520', '#ffb6c1', '#faf0e6', 'isHexColor', 'firstChild', 'type', '#add8e6', 'byteLength', 'setTransform', '#90ee90', 'rect', '6543vEydtF', '#40e0d0', '#7b68ee', 'SVGStrToDataURL', '^#([0-9a-f]{6}|[0-9a-f]{3})$', 'object', '1352739ddtezd', '#b22222', '#3cb371', 'rgbToHex', 'cover', 'getStrFromSVGNode', 'removeUselessStrokeAndFill', 'convertTransform', 'cloneCanvas', 'parseColors', '#778899', '#dda0dd', '#fffafa', 'filter', 'sin', 'data-replace-colors', '#006400', 'removeEventListener', 'left', '#808000', '#e0ffff', '_strokeElements', '#008b8b'];
    a0_0x46c8 = function() {
        return _0x465236;
    }
    ;
    return a0_0x46c8();
}
class ResizeSVG {
    constructor(_0x243322) {}
    ['parse'](_0x71d832) {
        const _0x11a259 = a0_0x6cbe4f;
        let _0x47c510 = TextEditorUtil[_0x11a259(0xe1)](_0x71d832);
        if (!_0x47c510)
            return !0x1;
        const _0xc8daf5 = new DOMParser()['parseFromString'](_0x47c510, _0x11a259(0x155))
          , _0x330218 = _0xc8daf5[_0x11a259(0x1b2)](_0x11a259(0x1ce));
        if (_0x330218)
            return console[_0x11a259(0x1f9)](_0x330218),
            !0x1;
        const _0x4fa771 = _0xc8daf5[_0x11a259(0x1dd)];
        let _0x2cdccf = parseInt(_0x4fa771['getAttribute'](_0x11a259(0x1f3)))
          , _0x1f7f9d = parseInt(_0x4fa771['getAttribute'](_0x11a259(0xd9)));
        if (isNaN(_0x2cdccf) || isNaN(_0x1f7f9d)) {
            let _0x4710e6 = _0x4fa771[_0x11a259(0x1e9)](_0x11a259(0xff));
            _0x4710e6 || (_0x4710e6 = _0x11a259(0xe4),
            _0x4fa771['setAttribute'](_0x11a259(0xff), _0x4710e6));
            const _0x30a5f0 = _0x4710e6[_0x11a259(0x1fd)]('\x20');
            if (_0x30a5f0[_0x11a259(0x126)] < 0x4)
                return !0x1;
            _0x2cdccf = isNaN(_0x2cdccf) ? _0x30a5f0[0x2] : _0x2cdccf,
            _0x1f7f9d = isNaN(_0x1f7f9d) ? _0x30a5f0[0x3] : _0x1f7f9d;
        }
        return this['_width'] = _0x2cdccf,
        this[_0x11a259(0x105)] = _0x1f7f9d,
        this[_0x11a259(0x98)] = _0x4fa771,
        !0x0;
    }
    get[a0_0x6cbe4f(0x1f3)]() {
        const _0x151ee0 = a0_0x6cbe4f;
        return this[_0x151ee0(0x151)];
    }
    get[a0_0x6cbe4f(0xd9)]() {
        const _0x135a2f = a0_0x6cbe4f;
        return this[_0x135a2f(0x105)];
    }
    [a0_0x6cbe4f(0x17c)](_0x383dc0, _0x542c48) {
        const _0x4e33c6 = a0_0x6cbe4f;
        this[_0x4e33c6(0x98)][_0x4e33c6(0x106)](_0x4e33c6(0x1f3), _0x383dc0),
        this[_0x4e33c6(0x98)]['setAttribute'](_0x4e33c6(0xd9), _0x542c48);
    }
    [a0_0x6cbe4f(0x9b)]() {
        const _0xc1123c = a0_0x6cbe4f;
        return new XMLSerializer()[_0xc1123c(0x1d8)](this[_0xc1123c(0x98)]);
    }
    [a0_0x6cbe4f(0x1a5)]() {
        const _0x482a31 = a0_0x6cbe4f
          , _0x3c0dde = this[_0x482a31(0x9b)]();
        return _0x482a31(0x14e) + window['btoa'](_0x3c0dde);
    }
}
class ReplaceSVGColors {
    constructor() {
        const _0x17ac1b = a0_0x6cbe4f;
        this['_fillElements'] = ['g', 'path', 'polyline', 'polygon', _0x17ac1b(0x128), _0x17ac1b(0xbb), _0x17ac1b(0x128), 'ellipse'],
        this[_0x17ac1b(0xd7)] = [_0x17ac1b(0x113), 'g', _0x17ac1b(0x13f), _0x17ac1b(0x9e), 'circle', _0x17ac1b(0xbb), _0x17ac1b(0x128), _0x17ac1b(0x117)],
        this[_0x17ac1b(0x170)] = [_0x17ac1b(0x20c)];
    }
    async[a0_0x6cbe4f(0xcb)](_0xd749d3) {
        const _0x42619a = a0_0x6cbe4f;
        let _0x88d852 = TextEditorUtil[_0x42619a(0xe1)](_0xd749d3);
        if (!_0x88d852)
            throw new Error('Error\x20while\x20parse\x20SVG\x20string.');
        this['alreadyParsed'] = -0x1 !== _0x88d852[_0x42619a(0x12b)](_0x42619a(0xf9)),
        this[_0x42619a(0x18b)] || (_0x88d852 = await TextEditorUtil['compressSVG'](_0x88d852));
        const _0x448e7c = new DOMParser()[_0x42619a(0x12a)](_0x88d852, _0x42619a(0x155));
        if (_0x448e7c[_0x42619a(0x1b2)](_0x42619a(0x1ce)))
            throw new Error(_0x42619a(0xe9));
        return this[_0x42619a(0x108)] = _0x448e7c,
        this[_0x42619a(0x18b)] && this['_resetElements'](),
        this[_0x42619a(0xea)] || (this[_0x42619a(0xea)] = []),
        this[_0x42619a(0x1db)](),
        this['_parseStrokeElements'](),
        this['_parseGradientElements'](),
        (this[_0x42619a(0x108)][_0x42619a(0x1dd)]['setAttribute']('data-already-parsed', '1'),
        this['_colors']);
    }
    [a0_0x6cbe4f(0x1e0)](_0x5ee269) {
        const _0x1e7bc8 = a0_0x6cbe4f
          , _0x3723bb = this[_0x1e7bc8(0x208)]();
        let _0x47fa93 = _0x3723bb[_0x1e7bc8(0x19f)];
        for (const _0x467f79 in _0x5ee269) {
            const _0x2f6606 = _0x5ee269[_0x467f79]
              , _0x470103 = new RegExp('.' + _0x2f6606['className'] + _0x1e7bc8(0x18f),'i')
              , _0x4ee0f9 = _0x47fa93[_0x1e7bc8(0x188)](_0x470103)
              , _0x31a462 = '.' + _0x2f6606[_0x1e7bc8(0x13d)] + '{' + _0x2f6606[_0x1e7bc8(0xb6)] + ':' + _0x2f6606['current'] + ';}';
            _0x4ee0f9 ? _0x47fa93 = _0x47fa93[_0x1e7bc8(0x194)](_0x4ee0f9[0x0], _0x31a462) : _0x47fa93 += _0x31a462;
        }
        _0x3723bb[_0x1e7bc8(0x19f)] = _0x47fa93;
    }
    get['colors']() {
        const _0x5d98a3 = a0_0x6cbe4f;
        return this[_0x5d98a3(0xea)];
    }
    [a0_0x6cbe4f(0x9b)]() {
        const _0x58a06e = a0_0x6cbe4f;
        return new XMLSerializer()[_0x58a06e(0x1d8)](this[_0x58a06e(0x108)]);
    }
    [a0_0x6cbe4f(0x1a5)]() {
        const _0x1477d5 = a0_0x6cbe4f
          , _0x7ed006 = this[_0x1477d5(0x9b)]();
        return _0x1477d5(0x14e) + window[_0x1477d5(0x196)](_0x7ed006);
    }
    [a0_0x6cbe4f(0x208)]() {
        const _0x541a8b = a0_0x6cbe4f;
        if (!this[_0x541a8b(0x1d3)]) {
            const _0x1a2708 = this['_svgDoc'][_0x541a8b(0x1dd)][_0x541a8b(0x1b2)]('style[data-replace-colors]');
            _0x1a2708 && (this[_0x541a8b(0x1d3)] = _0x1a2708);
        }
        return !this[_0x541a8b(0x1d3)] && (this['_styleTag'] = document['createElement'](_0x541a8b(0x185)),
        this[_0x541a8b(0x1d3)]['type'] = _0x541a8b(0x138),
        this[_0x541a8b(0x1d3)][_0x541a8b(0x106)](_0x541a8b(0xd1), '1'),
        this[_0x541a8b(0x108)][_0x541a8b(0x1dd)][_0x541a8b(0xf3)](this[_0x541a8b(0x1d3)], parent[_0x541a8b(0xb5)])),
        this[_0x541a8b(0x1d3)];
    }
    ['_getColorFromClass'](_0xde709e) {
        const _0xf9a9ca = a0_0x6cbe4f
          , _0x3a99e8 = this[_0xf9a9ca(0x208)]()[_0xf9a9ca(0x19f)]
          , _0x4ce7a5 = new RegExp('.' + _0xde709e + _0xf9a9ca(0x183),'i')
          , _0x389dae = _0x3a99e8[_0xf9a9ca(0x188)](_0x4ce7a5);
        if (_0x389dae && _0x389dae[_0xf9a9ca(0x126)] > 0x1)
            return _0x389dae[0x1];
    }
    [a0_0x6cbe4f(0x1c3)]() {
        const _0x49d10d = a0_0x6cbe4f
          , _0x478894 = this[_0x49d10d(0x13e)][_0x49d10d(0xf8)](',')
          , _0x5dd8d2 = this['_svgDoc'][_0x49d10d(0x16b)](_0x478894);
        for (const _0x1e962f of _0x5dd8d2) {
            const _0x1f8a3a = _0x1e962f['getAttribute']('class');
            if (_0x1f8a3a) {
                const _0xda566 = this[_0x49d10d(0xaf)](_0x1f8a3a);
                _0xda566 && (_0x1e962f[_0x49d10d(0x185)][_0x49d10d(0x9d)](_0x49d10d(0x1bd)),
                _0x1e962f[_0x49d10d(0x106)](_0x49d10d(0x1bd), _0xda566),
                _0x1e962f[_0x49d10d(0x1c1)]['remove'](_0x1f8a3a));
            }
        }
        const _0xfd1e87 = this[_0x49d10d(0xd7)]['join'](',')
          , _0x27845b = this[_0x49d10d(0x108)][_0x49d10d(0x16b)](_0xfd1e87);
        for (const _0x588550 of _0x27845b) {
            const _0x4bf2e0 = _0x588550[_0x49d10d(0x1e9)](_0x49d10d(0x1d4));
            if (_0x4bf2e0) {
                const _0x2ccfd8 = this[_0x49d10d(0xaf)](_0x4bf2e0);
                _0x2ccfd8 && (_0x588550[_0x49d10d(0x185)]['removeProperty'](_0x49d10d(0x1aa)),
                _0x588550['setAttribute']('stroke', _0x2ccfd8),
                _0x588550[_0x49d10d(0x1c1)][_0x49d10d(0xb0)](_0x4bf2e0));
            }
        }
        const _0x23d082 = this[_0x49d10d(0x170)]['join'](',')
          , _0x1dcd91 = this[_0x49d10d(0x108)][_0x49d10d(0x16b)](_0x23d082);
        for (const _0x2a6cb5 of _0x1dcd91) {
            const _0x78db00 = _0x2a6cb5['getAttribute'](_0x49d10d(0x1d4));
            if (_0x78db00) {
                const _0x2e79f8 = this[_0x49d10d(0xaf)](_0x78db00);
                _0x2e79f8 && (_0x2a6cb5[_0x49d10d(0x185)][_0x49d10d(0x9d)]('stop-color'),
                _0x2a6cb5[_0x49d10d(0x106)](_0x49d10d(0x1ca), _0x2e79f8),
                _0x2a6cb5[_0x49d10d(0x1c1)]['remove'](_0x78db00));
            }
        }
        this[_0x49d10d(0x208)]()[_0x49d10d(0x19f)] = '';
    }
    [a0_0x6cbe4f(0x1db)]() {
        const _0x44147b = a0_0x6cbe4f
          , _0x5d7ea2 = []
          , _0x15f212 = this[_0x44147b(0x13e)]['join'](',')
          , _0x3bfa8d = this['_svgDoc'][_0x44147b(0x16b)](_0x15f212);
        for (const _0x38c222 of _0x3bfa8d) {
            let _0x5f13b3 = null;
            const _0x33cc07 = _0x38c222[_0x44147b(0x185)][_0x44147b(0x1bd)]
              , _0x7691a0 = this['_trim'](_0x38c222[_0x44147b(0x1e9)](_0x44147b(0x1bd)));
            let _0x4b2df7 = this[_0x44147b(0x14a)](_0x38c222['getAttribute'](_0x44147b(0x1aa)));
            if (_0x7691a0 && _0x44147b(0x103) !== _0x7691a0 ? _0x5f13b3 = _0x7691a0 : _0x33cc07 ? _0x5f13b3 = _0x33cc07 : _0x4b2df7 && _0x44147b(0x103) !== _0x4b2df7 || -0x1 !== _0x5d7ea2[_0x44147b(0x12b)](_0x38c222[_0x44147b(0xfd)]) || _0x38c222[_0x44147b(0x1e9)](_0x44147b(0xa3)) || (_0x5f13b3 = _0x44147b(0x103)),
            _0x5f13b3 && (_0x5f13b3 = this[_0x44147b(0xfc)](_0x5f13b3),
            TextEditorUtil['isHexColor'](_0x5f13b3))) {
                _0x5d7ea2['push'](_0x38c222),
                _0x38c222[_0x44147b(0x185)][_0x44147b(0x9d)](_0x44147b(0x1bd)),
                _0x38c222[_0x44147b(0x106)](_0x44147b(0x1bd), _0x5f13b3);
                const _0x76fbfb = this['_generateClassName'](_0x44147b(0x201), _0x5f13b3);
                _0x38c222['classList'][_0x44147b(0x20f)](_0x76fbfb),
                this[_0x44147b(0x130)](_0x5f13b3, _0x44147b(0x1bd)) || this['_colors']['push']({
                    'current': _0x5f13b3,
                    'previous': _0x5f13b3,
                    'initial': _0x5f13b3,
                    'className': _0x76fbfb,
                    'type': _0x44147b(0x1bd)
                });
            }
        }
    }
    [a0_0x6cbe4f(0xa5)]() {
        const _0x56d664 = a0_0x6cbe4f
          , _0xaa1542 = []
          , _0x2a02d3 = this['_strokeElements'][_0x56d664(0xf8)](',')
          , _0x59df70 = this[_0x56d664(0x108)][_0x56d664(0x16b)](_0x2a02d3);
        for (const _0x492f5a of _0x59df70) {
            let _0x2c6a12 = null;
            if (this[_0x56d664(0x18b)] && (_0x2c6a12 = this[_0x56d664(0xaf)](_0x492f5a)),
            !_0x2c6a12) {
                const _0xbb51dc = _0x492f5a['style'][_0x56d664(0x1aa)]
                  , _0x541177 = this['_trim'](_0x492f5a['getAttribute'](_0x56d664(0x1aa)));
                _0x541177 && _0x56d664(0x103) !== _0x541177 ? _0x2c6a12 = _0x541177 : _0xbb51dc && (_0x2c6a12 = _0xbb51dc);
            }
            if (_0x2c6a12 && (_0x2c6a12 = this[_0x56d664(0xfc)](_0x2c6a12),
            TextEditorUtil[_0x56d664(0xb4)](_0x2c6a12))) {
                _0xaa1542[_0x56d664(0x1c5)](_0x492f5a),
                _0x492f5a[_0x56d664(0x185)]['removeProperty'](_0x56d664(0x1aa)),
                _0x492f5a[_0x56d664(0x106)](_0x56d664(0x1aa), _0x2c6a12);
                const _0x2741c1 = this['_generateClassName']('colorStroke', _0x2c6a12);
                _0x492f5a[_0x56d664(0x1c1)][_0x56d664(0x20f)](_0x2741c1),
                this['_colorExists'](_0x2c6a12, _0x56d664(0x1aa)) || this[_0x56d664(0xea)][_0x56d664(0x1c5)]({
                    'current': _0x2c6a12,
                    'previous': _0x2c6a12,
                    'initial': _0x2c6a12,
                    'className': _0x2741c1,
                    'type': 'stroke'
                });
            }
        }
    }
    [a0_0x6cbe4f(0x1a2)]() {
        const _0x34d0ad = a0_0x6cbe4f
          , _0xaca39b = []
          , _0x256599 = this['_gradientElements']['join'](',')
          , _0x30bb02 = this['_svgDoc']['querySelectorAll'](_0x256599);
        for (const _0x4e512e of _0x30bb02) {
            let _0x12562b = null;
            if (this[_0x34d0ad(0x18b)] && (_0x12562b = this[_0x34d0ad(0xaf)](_0x4e512e)),
            !_0x12562b) {
                const _0x4fe4fd = this[_0x34d0ad(0x14a)](_0x4e512e[_0x34d0ad(0x1e9)]('stop-color'));
                _0x12562b = _0x4fe4fd || _0x34d0ad(0x103);
            }
            if (_0x12562b && (_0x12562b = this[_0x34d0ad(0xfc)](_0x12562b),
            TextEditorUtil['isHexColor'](_0x12562b))) {
                _0xaca39b['push'](_0x4e512e),
                _0x4e512e[_0x34d0ad(0x106)](_0x34d0ad(0x1ca), _0x12562b);
                const _0x205076 = this[_0x34d0ad(0x203)](_0x34d0ad(0x177), _0x12562b);
                _0x4e512e[_0x34d0ad(0x1c1)]['add'](_0x205076),
                this[_0x34d0ad(0x130)](_0x12562b, _0x34d0ad(0x1ca)) || this[_0x34d0ad(0xea)][_0x34d0ad(0x1c5)]({
                    'current': _0x12562b,
                    'previous': _0x12562b,
                    'initial': _0x12562b,
                    'className': _0x205076,
                    'type': 'stop-color'
                });
            }
        }
    }
    [a0_0x6cbe4f(0x203)](_0x392bc0, _0x32a024) {
        return _0x392bc0 + _0x32a024['replace'](/[\W+]/g, '');
    }
    ['_normalizeColor'](_0x4b4a9e) {
        const _0x32749b = a0_0x6cbe4f;
        return /^#[0-9a-f]{3}$/i[_0x32749b(0x152)](_0x4b4a9e) ? _0x4b4a9e = '#' + _0x4b4a9e[_0x32749b(0x19a)](0x1)[_0x32749b(0x1fd)]('')[_0x32749b(0x14c)](function(_0x285794) {
            return _0x285794 + _0x285794;
        })[_0x32749b(0xf8)]('') : -0x1 !== _0x4b4a9e['indexOf'](_0x32749b(0x154)) ? _0x4b4a9e = TextEditorUtil['rgbStringToHex'](_0x4b4a9e) : ReplaceSVGColors['COLORNAMES'][_0x4b4a9e] ? _0x4b4a9e = ReplaceSVGColors[_0x32749b(0x16f)][_0x4b4a9e] : _0x32749b(0x1e3) !== _0x4b4a9e && 'none' !== _0x4b4a9e || (_0x4b4a9e = null),
        _0x4b4a9e;
    }
    [a0_0x6cbe4f(0x14a)](_0x1c230b) {
        const _0x310627 = a0_0x6cbe4f;
        return _0x1c230b ? _0x1c230b[_0x310627(0x1a1)]() : _0x1c230b;
    }
    [a0_0x6cbe4f(0x130)](_0x338872, _0x7f29fd) {
        const _0x4af4c4 = a0_0x6cbe4f;
        for (const _0x5521cf in this[_0x4af4c4(0xea)])
            if (this[_0x4af4c4(0xea)][_0x5521cf][_0x4af4c4(0x13b)] === _0x338872 && this['_colors'][_0x5521cf][_0x4af4c4(0xb6)] === _0x7f29fd)
                return !0x0;
        return !0x1;
    }
}
ReplaceSVGColors[a0_0x6cbe4f(0x16f)] = {
    'aliceblue': '#f0f8ff',
    'antiquewhite': a0_0x6cbe4f(0x163),
    'aqua': a0_0x6cbe4f(0x1e7),
    'aquamarine': '#7fffd4',
    'azure': a0_0x6cbe4f(0xf1),
    'beige': '#f5f5dc',
    'bisque': a0_0x6cbe4f(0xac),
    'black': a0_0x6cbe4f(0x103),
    'blanchedalmond': a0_0x6cbe4f(0x1ee),
    'blue': a0_0x6cbe4f(0xf6),
    'blueviolet': a0_0x6cbe4f(0x1f0),
    'brown': a0_0x6cbe4f(0xae),
    'burlywood': a0_0x6cbe4f(0x174),
    'cadetblue': a0_0x6cbe4f(0x180),
    'chartreuse': a0_0x6cbe4f(0x112),
    'chocolate': a0_0x6cbe4f(0xdd),
    'coral': a0_0x6cbe4f(0xa2),
    'cornflowerblue': a0_0x6cbe4f(0x99),
    'cornsilk': '#fff8dc',
    'crimson': a0_0x6cbe4f(0x186),
    'cyan': '#00ffff',
    'darkblue': a0_0x6cbe4f(0x119),
    'darkcyan': a0_0x6cbe4f(0xd8),
    'darkgoldenrod': '#b8860b',
    'darkgray': a0_0x6cbe4f(0x157),
    'darkgreen': a0_0x6cbe4f(0xd2),
    'darkkhaki': a0_0x6cbe4f(0x16a),
    'darkmagenta': '#8b008b',
    'darkolivegreen': a0_0x6cbe4f(0x1b9),
    'darkorange': a0_0x6cbe4f(0x1b5),
    'darkorchid': a0_0x6cbe4f(0xad),
    'darkred': '#8b0000',
    'darksalmon': a0_0x6cbe4f(0x1af),
    'darkseagreen': a0_0x6cbe4f(0x9f),
    'darkslateblue': a0_0x6cbe4f(0x167),
    'darkslategray': a0_0x6cbe4f(0x176),
    'darkturquoise': a0_0x6cbe4f(0x1de),
    'darkviolet': a0_0x6cbe4f(0x143),
    'deeppink': a0_0x6cbe4f(0xe6),
    'deepskyblue': a0_0x6cbe4f(0x1ff),
    'dimgray': '#696969',
    'dodgerblue': a0_0x6cbe4f(0xdf),
    'firebrick': a0_0x6cbe4f(0xc3),
    'floralwhite': a0_0x6cbe4f(0x1a7),
    'forestgreen': a0_0x6cbe4f(0x1cf),
    'fuchsia': a0_0x6cbe4f(0x11b),
    'gainsboro': a0_0x6cbe4f(0x97),
    'ghostwhite': '#f8f8ff',
    'gold': '#ffd700',
    'goldenrod': a0_0x6cbe4f(0xb1),
    'gray': a0_0x6cbe4f(0x144),
    'green': a0_0x6cbe4f(0x10c),
    'greenyellow': a0_0x6cbe4f(0x18c),
    'honeydew': a0_0x6cbe4f(0x101),
    'hotpink': a0_0x6cbe4f(0x1b1),
    'indianred\x20': '#cd5c5c',
    'indigo': a0_0x6cbe4f(0x132),
    'ivory': a0_0x6cbe4f(0x1fa),
    'khaki': a0_0x6cbe4f(0x15d),
    'lavender': '#e6e6fa',
    'lavenderblush': a0_0x6cbe4f(0x179),
    'lawngreen': a0_0x6cbe4f(0x17a),
    'lemonchiffon': a0_0x6cbe4f(0x1c7),
    'lightblue': a0_0x6cbe4f(0xb7),
    'lightcoral': '#f08080',
    'lightcyan': a0_0x6cbe4f(0xd6),
    'lightgoldenrodyellow': a0_0x6cbe4f(0x10a),
    'lightgrey': '#d3d3d3',
    'lightgreen': a0_0x6cbe4f(0xba),
    'lightpink': a0_0x6cbe4f(0xb2),
    'lightsalmon': a0_0x6cbe4f(0x10f),
    'lightseagreen': '#20b2aa',
    'lightskyblue': a0_0x6cbe4f(0x12e),
    'lightslategray': a0_0x6cbe4f(0xcc),
    'lightsteelblue': '#b0c4de',
    'lightyellow': a0_0x6cbe4f(0x164),
    'lime': a0_0x6cbe4f(0x1f7),
    'limegreen': '#32cd32',
    'linen': a0_0x6cbe4f(0xb3),
    'magenta': a0_0x6cbe4f(0x11b),
    'maroon': a0_0x6cbe4f(0x14d),
    'mediumaquamarine': a0_0x6cbe4f(0xef),
    'mediumblue': '#0000cd',
    'mediumorchid': a0_0x6cbe4f(0x1b3),
    'mediumpurple': a0_0x6cbe4f(0x111),
    'mediumseagreen': a0_0x6cbe4f(0xc4),
    'mediumslateblue': a0_0x6cbe4f(0xbe),
    'mediumspringgreen': a0_0x6cbe4f(0x1e5),
    'mediumturquoise': '#48d1cc',
    'mediumvioletred': a0_0x6cbe4f(0x1ae),
    'midnightblue': '#191970',
    'mintcream': '#f5fffa',
    'mistyrose': a0_0x6cbe4f(0x1b7),
    'moccasin': a0_0x6cbe4f(0x1bc),
    'navajowhite': a0_0x6cbe4f(0x1e4),
    'navy': '#000080',
    'oldlace': a0_0x6cbe4f(0x16e),
    'olive': a0_0x6cbe4f(0xd5),
    'olivedrab': a0_0x6cbe4f(0x165),
    'orange': a0_0x6cbe4f(0x122),
    'orangered': a0_0x6cbe4f(0x158),
    'orchid': a0_0x6cbe4f(0x1bf),
    'palegoldenrod': a0_0x6cbe4f(0x171),
    'palegreen': a0_0x6cbe4f(0x17b),
    'paleturquoise': '#afeeee',
    'palevioletred': '#d87093',
    'papayawhip': '#ffefd5',
    'peachpuff': '#ffdab9',
    'peru': a0_0x6cbe4f(0x210),
    'pink': a0_0x6cbe4f(0x169),
    'plum': a0_0x6cbe4f(0xcd),
    'powderblue': a0_0x6cbe4f(0x20d),
    'purple': a0_0x6cbe4f(0x20a),
    'rebeccapurple': a0_0x6cbe4f(0xdc),
    'red': a0_0x6cbe4f(0x134),
    'rosybrown': a0_0x6cbe4f(0x14b),
    'royalblue': a0_0x6cbe4f(0xe3),
    'saddlebrown': '#8b4513',
    'salmon': a0_0x6cbe4f(0x1ef),
    'sandybrown': a0_0x6cbe4f(0x1d5),
    'seagreen': '#2e8b57',
    'seashell': '#fff5ee',
    'sienna': '#a0522d',
    'silver': a0_0x6cbe4f(0x1bb),
    'skyblue': '#87ceeb',
    'slateblue': a0_0x6cbe4f(0x18a),
    'slategray': a0_0x6cbe4f(0x19c),
    'snow': a0_0x6cbe4f(0xce),
    'springgreen': a0_0x6cbe4f(0x13c),
    'steelblue': a0_0x6cbe4f(0xde),
    'tan': a0_0x6cbe4f(0x205),
    'teal': a0_0x6cbe4f(0x1b0),
    'thistle': a0_0x6cbe4f(0x1a4),
    'tomato': a0_0x6cbe4f(0x178),
    'turquoise': a0_0x6cbe4f(0xbd),
    'violet': a0_0x6cbe4f(0xe5),
    'wheat': '#f5deb3',
    'white': '#ffffff',
    'whitesmoke': '#f5f5f5',
    'yellow': a0_0x6cbe4f(0x1d6),
    'yellowgreen': a0_0x6cbe4f(0x175)
};
